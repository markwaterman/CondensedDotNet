<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Welcome to the Condensed Collection Library for .NET</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Welcome" /><meta name="Microsoft.Help.Id" content="a2dd277a-ec2e-4f4b-a42d-e31f23b94bdd" /><meta name="Description" content="The Condensed Collection Library for .NET provides the T:Condensed.CondensedCollection`1 class, an IList&lt;T&gt; implementation that uses interning (deduplication) for efficient storage of large numbers of immutable elements." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Condesed Collection Library for .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a2dd277a-ec2e-4f4b-a42d-e31f23b94bdd.htm" title="Condesed Collection Library for .NET" tocid="roottoc">Condesed Collection Library for .NET</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="a2dd277a-ec2e-4f4b-a42d-e31f23b94bdd.htm" title="Welcome" tocid="a2dd277a-ec2e-4f4b-a42d-e31f23b94bdd">Welcome</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6326cb27-4108-4317-ae04-e67a8cb4738d.htm" title="Version History" tocid="6326cb27-4108-4317-ae04-e67a8cb4738d">Version History</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="12336e43-b0f4-46fb-a17b-c640871bddab.htm" title="Immutability Overview" tocid="12336e43-b0f4-46fb-a17b-c640871bddab">Immutability Overview</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="88ffb368-39bd-430b-bd09-0800d2f14dbf.htm" title="LINQ Operators" tocid="88ffb368-39bd-430b-bd09-0800d2f14dbf">LINQ Operators</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="23ce826c-4e23-4c13-9ac9-63cdccb22d86.htm" title="Cutover Overview" tocid="23ce826c-4e23-4c13-9ac9-63cdccb22d86">Cutover Overview</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="606626e5-fb28-47c5-939f-a87c14d4f99a.htm" title="Reclamation and Cleanup" tocid="606626e5-fb28-47c5-939f-a87c14d4f99a">Reclamation and Cleanup</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="4e8c0308-b111-44cc-aa69-99f3a651f306.htm" title="Equality Overview" tocid="4e8c0308-b111-44cc-aa69-99f3a651f306">Equality Overview</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="6c8df980-bdc2-46d6-b712-f2f740467dd9.htm" title="License" tocid="6c8df980-bdc2-46d6-b712-f2f740467dd9">License</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="48635bf0-eed3-4978-e228-386eea4ad6d1.htm" title="API Reference" tocid="48635bf0-eed3-4978-e228-386eea4ad6d1">API Reference</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Welcome to the Condensed Collection Library for .NET</h1></td></tr></table><span class="introStyle"></span> <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="introduction"><p>
        The <strong>Condensed Collection Library for .NET</strong> provides the <a href="567ca794-b467-8736-0b20-caacc958e8a9.htm">CondensedCollection</a> class, an IList&lt;T&gt; implementation that uses interning (deduplication) for efficient storage of large numbers of immutable elements.
      </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Installation</span></div><div id="ID0RBSection" class="collapsibleSection"><ul><li><p>
              NuGet:
              <a href="https://www.nuget.org/packages/Condensed" target="_blank">https://www.nuget.org/packages/Condensed</a></p></li><li><p>
              Build from source: 
			        <a href="https://github.com/markwaterman/CondensedDotNet" target="_blank">https://github.com/markwaterman/CondensedDotNet</a></p></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Usage</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The CondensedCollection class provides a generalized form of interning for any immutable .NET type. Use this collection like an ordinary list, keeping the following guidelines in mind:
        </p><ol><li><p>
              The type stored in the collection <a href="12336e43-b0f4-46fb-a17b-c640871bddab.htm">immutable</a>.</p></li><li><p>
              The collection must be able to properly <a href="4e8c0308-b111-44cc-aa69-99f3a651f306.htm">compare elements for equality</a>.
            </p></li><li><p>
              If the contents of the collection are subject to change after the initial load, you might need to think about <a href="606626e5-fb28-47c5-939f-a87c14d4f99a.htm">memory reclamation</a> from the collection's intern pool.
            </p></li></ol><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACADAAA_tab1" class="codeSnippetContainerTabSingle">Basic Usage</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Add 100 million dates spanning December 2016:</span>
<span class="highlight-keyword">var</span> cc = <span class="highlight-keyword">new</span> Condensed.CondensedCollection&lt;DateTime&gt;(capacity: <span class="highlight-number">100000000</span>);

<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-number">100000000</span>; i++)
    cc.Add(<span class="highlight-keyword">new</span> DateTime(<span class="highlight-number">2016</span>, <span class="highlight-number">12</span>, i % <span class="highlight-number">30</span> + <span class="highlight-number">1</span>));

<span class="highlight-comment">// Memory usage: 100 MB (compare to ~780 MB for an ordinary List&lt;DateTime&gt;)</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACADAAA");</script><p>
          Internally, the CondensedCollection uses a variable-width index to reference the unique values in its intern pool. Given sufficient repetition in your collection, this can provide significant memory savings even when storing small types. In the example above, references to the 31 unique days in a month can be held in an internal index that is just one byte wide.
        </p><p>
          Interning items can reduce memory consumption and can often improve performance for certain compute-intensive tasks. The trade-off is that modifications to the collection are slower. The Wikipedia article on
          <a href="https://en.wikipedia.org/wiki/String_interning" target="_blank">string interning</a>
          offers good background on the performance/space tradeoffs involved.
        </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />
        Features
      </span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          The CondensedCollection provides the following additional features:
        </p><ul><li><p>
              Specialized <a href="88ffb368-39bd-430b-bd09-0800d2f14dbf.htm">LINQ operators</a> in the <a href="db10ce80-b3c5-50a7-261c-780047e8c916.htm">Condensed.Linq</a> namespace that are optimized to work on the collection. (Add a "<span class="code">using Condensed.Linq;</span>" statement to source files that need to use these extension methods.)
            </p></li><li><p>
              Optional automatic fallback ("<a href="23ce826c-4e23-4c13-9ac9-63cdccb22d86.htm">cutover</a>") to non-deduplicated list behavior if the items in the collection aren't sufficiently unique to make the interning overhead worthwhile.
            </p></li><li><p>
              Support for nullable types.
            </p></li><li><p>
              Flexible options for <a href="606626e5-fb28-47c5-939f-a87c14d4f99a.htm">reclaiming memory</a>.
            </p></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />
        Thread Safety
      </span></div><div id="ID4RBSection" class="collapsibleSection"><p><a href="567ca794-b467-8736-0b20-caacc958e8a9.htm">CondensedCollection</a> is <em>not</em> thread-safe and does not perform any internal synchronization. Multiple simultaneous readers are allowed, provided there is no active writer. An exclusive lock or a <a href="http://msdn2.microsoft.com/en-us/library/bb300132" target="_blank">ReaderWriterLockSlim</a> should be used to synchronize multi-threaded access to each instance of the collection.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="6326cb27-4108-4317-ae04-e67a8cb4738d.htm">Version History</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright 2016-2017 Mark Waterman</p></div></body></html>